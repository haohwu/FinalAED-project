/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.CustomerRole;
import Patient.Patient;
import Medicine.Medicine;
import Order.Order;
import Pharmacy.Pharmacy;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Pratik Poojari
 */
public class CustomerOrderAction extends javax.swing.JPanel {

    
    JPanel userProcessContainer;
    Patient patient;
    Pharmacy pharma;
    Order order;
    int totalAmount = 0;
    
    ArrayList<Medicine> cart = new ArrayList<Medicine>();
    
    public CustomerOrderAction(JPanel userProcessContainer, Patient patient, Pharmacy pharmacy) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.patient = patient;
        this.pharma = pharmacy;
        lblPharmacy.setText("Pharmacy: " +this.pharma.getPharmacyName());
        populateMedicine(); 
        populateOrder();
        if(tblOrders.getRowCount() <= 0)
        {
            btnConfirm.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblPharmacy = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrders = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblMedicines = new javax.swing.JTable();
        btnOrder = new javax.swing.JButton();
        txtAmount = new javax.swing.JTextField();
        lblTotal = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        btnConfirm = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        lblBackground = new javax.swing.JLabel();

        setLayout(null);

        lblPharmacy.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lblPharmacy.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPharmacy.setText("<value>");
        add(lblPharmacy);
        lblPharmacy.setBounds(260, 30, 481, 40);

        tblOrders.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        tblOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order No", "Medicine Name", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblOrders);

        add(jScrollPane1);
        jScrollPane1.setBounds(170, 340, 670, 150);

        tblMedicines.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        tblMedicines.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicine No", "Medicine Name", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMedicines.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMedicinesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblMedicines);

        add(jScrollPane2);
        jScrollPane2.setBounds(170, 104, 670, 140);

        btnOrder.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnOrder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Add to Cart Button.png"))); // NOI18N
        btnOrder.setText("Order");
        btnOrder.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrderActionPerformed(evt);
            }
        });
        add(btnOrder);
        btnOrder.setBounds(720, 260, 120, 50);

        txtAmount.setEditable(false);
        txtAmount.setBackground(new java.awt.Color(255, 255, 255));
        txtAmount.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        txtAmount.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(txtAmount);
        txtAmount.setBounds(680, 540, 159, 40);

        lblTotal.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblTotal.setText("Total Amount:");
        add(lblTotal);
        lblTotal.setBounds(520, 550, 140, 15);

        btnDelete.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Delete Button.png"))); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete);
        btnDelete.setBounds(170, 520, 130, 50);

        btnConfirm.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnConfirm.setText("Confirm");
        btnConfirm.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });
        add(btnConfirm);
        btnConfirm.setBounds(620, 610, 120, 50);

        btnBack.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Back Button.png"))); // NOI18N
        btnBack.setText("Back");
        btnBack.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(30, 30, 120, 50);

        lblBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/7e8e8c57497d2627fa7923f20188fa5d.jpg"))); // NOI18N
        add(lblBackground);
        lblBackground.setBounds(0, 0, 1030, 760);
    }// </editor-fold>//GEN-END:initComponents

    private void tblMedicinesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMedicinesMouseClicked
        // TODO add your handling code here:
        int selectedRow = tblMedicines.getSelectedRow();
        if (selectedRow >= 0)
        {
            btnOrder.setEnabled(true);
        }
    }//GEN-LAST:event_tblMedicinesMouseClicked

    private void btnOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrderActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblMedicines.getSelectedRow();
        if (selectedRow >= 0)
        {
            Medicine medicine = (Medicine) tblMedicines.getValueAt(selectedRow, 1);

            cart.add(medicine);
            JOptionPane.showMessageDialog(null, "Medicine Item " + medicine.getMedicineName()+ " added to cart successfully!");
            totalAmount = totalAmount + medicine.getPrice();
            populateOrder();
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Please select a row!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

    }//GEN-LAST:event_btnOrderActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRow1 = tblOrders.getSelectedRow();
        if (selectedRow1 >= 0)
        {
            Medicine mi1 = (Medicine) tblOrders.getValueAt(selectedRow1, 1);
            cart.remove(mi1);
            JOptionPane.showMessageDialog(null, "Medicine Item " + mi1.getMedicineName()+ " deleted from cart successfully!");
            totalAmount = totalAmount - mi1.getPrice();
            populateOrder();
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Please select a row!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
        // TODO add your handling code here:
        order = pharma.getOrderDirectory().createPatientOrder(patient);
        for(Medicine medicine : cart)
        {
            order.addItem(medicine);
        }
        order.calculateTotalAmount();
      
        JOptionPane.showMessageDialog(null, "Thank you for your order! Order of " + order.getMedicineList().size() + " medicine item(s) for amount $" + order.getAmount()+ " is placed successfully!");
        
    }//GEN-LAST:event_btnConfirmActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);

        
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnConfirm;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnOrder;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblBackground;
    private javax.swing.JLabel lblPharmacy;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JTable tblMedicines;
    private javax.swing.JTable tblOrders;
    private javax.swing.JTextField txtAmount;
    // End of variables declaration//GEN-END:variables
private void populateMedicine() {
        DefaultTableModel dtm = (DefaultTableModel)tblMedicines.getModel();
        dtm.setRowCount(0);
        if(pharma.getMedicineDirectory().getMedicineList()!= null)
        {
            for(Medicine mi : pharma.getMedicineDirectory().getMedicineList())
            {
                Object[] row = new Object[dtm.getColumnCount()];
                row[0] = mi.getId();
                row[1] = mi;
                row[2] = mi.getPrice();
                dtm.addRow(row);
            }
        }
        if(dtm.getRowCount() == 0)
            {
                btnOrder.setEnabled(false);
                btnDelete.setEnabled(false);
            }
    }

    private void populateOrder() {
        DefaultTableModel dtm = (DefaultTableModel)tblOrders.getModel();
        dtm.setRowCount(0);
        if(cart != null)
        {
            btnDelete.setEnabled(true);
            btnConfirm.setEnabled(true);
            int count = 1;
            for(Medicine medicine : cart)
            {
                Object[] row = new Object[dtm.getColumnCount()];
                row[0] = count;
                row[1] = medicine;
                row[2] =  medicine.getPrice();
                dtm.addRow(row);
                count++;
            }
            txtAmount.setText(Integer.toString(totalAmount));
        }
        if(tblOrders.getRowCount() <= 0)
        {
            btnConfirm.setEnabled(false);
            btnDelete.setEnabled(false);
        }
    }

}
