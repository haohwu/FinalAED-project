
package userinterface.HospitalRole;

import Business.Customer.Customer;
import Business.EcoSystem;
import Business.Hospital.Hospital;
import Business.MedicineItems.MedicineItem;
import Business.Orders.Orders;
import Business.Pharmacy.Pharmacy;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author chengyen lai
 */
public class HospitalOrderAction extends javax.swing.JPanel {

    private EcoSystem system;
    JPanel userProcessContainer;
    Customer customer;
    Pharmacy pharma;
    Orders orders;
    private UserAccount user;
    int totalAmount = 0;
    Hospital hospital;
    
    ArrayList<MedicineItem> cart = new ArrayList<MedicineItem>();
    
    public HospitalOrderAction(JPanel userProcessContainer, Hospital hospital, Pharmacy pharmacy) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.hospital = hospital;
        this.pharma = pharmacy;
       this.system=system;
        populateMedicine1(); 
        populateOrder1();
        if(HOAOrderTable.getRowCount() <= 0)
        {
            HOAOrderButton.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        HOAOrderButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        HospMedicineTable = new javax.swing.JTable();
        AddHospMedicineItemButton = new javax.swing.JButton();
        HOABackButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        HOAOrderTable = new javax.swing.JTable();
        HOADeleteItemButton = new javax.swing.JButton();
        HOAOrderTotalAmountText = new javax.swing.JTextField();
        HOATotalAmountLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 255, 255));

        HOAOrderButton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        HOAOrderButton.setText("Confirm Order");
        HOAOrderButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        HOAOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HOAOrderButtonActionPerformed(evt);
            }
        });

        HospMedicineTable.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        HospMedicineTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicine Id", "Medicine Name", "Medicine Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        HospMedicineTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HospMedicineTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(HospMedicineTable);

        AddHospMedicineItemButton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        AddHospMedicineItemButton.setText("Add Item to Order");
        AddHospMedicineItemButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        AddHospMedicineItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddHospMedicineItemButtonActionPerformed(evt);
            }
        });

        HOABackButton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        HOABackButton.setText("< Back");
        HOABackButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        HOABackButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                HOABackButtonFocusLost(evt);
            }
        });
        HOABackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HOABackButtonActionPerformed(evt);
            }
        });

        HOAOrderTable.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        HOAOrderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Medicine Name", "Medicine Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(HOAOrderTable);

        HOADeleteItemButton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        HOADeleteItemButton.setText("Delete Item");
        HOADeleteItemButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        HOADeleteItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HOADeleteItemButtonActionPerformed(evt);
            }
        });

        HOAOrderTotalAmountText.setEditable(false);
        HOAOrderTotalAmountText.setBackground(new java.awt.Color(204, 204, 204));
        HOAOrderTotalAmountText.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        HOAOrderTotalAmountText.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        HOAOrderTotalAmountText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HOAOrderTotalAmountTextActionPerformed(evt);
            }
        });

        HOATotalAmountLabel.setBackground(new java.awt.Color(255, 255, 255));
        HOATotalAmountLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        HOATotalAmountLabel.setText("Total Amount:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 271, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AddHospMedicineItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 758, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(HOADeleteItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(HOATotalAmountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(HOAOrderTotalAmountText, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(HOAOrderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(HOABackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(190, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 771, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(AddHospMedicineItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(HOABackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HOADeleteItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HOATotalAmountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HOAOrderTotalAmountText, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HOAOrderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(400, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void HOAOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HOAOrderButtonActionPerformed
        // TODO add your handling code here:
        orders = pharma.getOrderDirectory().createNewOrderH(hospital);
        for(MedicineItem mo : cart)
        {
            orders.addItem(mo);
        }
        orders.calculateTotalAmount();
        JOptionPane.showMessageDialog(null, "Thank you for your order! Order of " + orders.getMedicineItemList().size() + " medicine item(s) for amount $" + orders.getTotalAmount() + " is placed successfully!");
    }//GEN-LAST:event_HOAOrderButtonActionPerformed

    private void HospMedicineTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HospMedicineTableMouseClicked
        // TODO add your handling code here:
        int selectedRow = HospMedicineTable.getSelectedRow();
        if (selectedRow >= 0)
        {
            AddHospMedicineItemButton.setEnabled(true);
        }
    }//GEN-LAST:event_HospMedicineTableMouseClicked

    private void AddHospMedicineItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddHospMedicineItemButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = HospMedicineTable.getSelectedRow();
        if (selectedRow >= 0)
        {
            MedicineItem mi2 = (MedicineItem) HospMedicineTable.getValueAt(selectedRow, 1);

            cart.add(mi2);
            JOptionPane.showMessageDialog(null, "Medicine Item " + mi2.getName()+ " added to cart successfully!");
            totalAmount = totalAmount + mi2.getPrice();
            populateOrder1();
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Please select a row!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_AddHospMedicineItemButtonActionPerformed

    private void HOABackButtonFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_HOABackButtonFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_HOABackButtonFocusLost

    private void HOABackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HOABackButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_HOABackButtonActionPerformed

    private void HOADeleteItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HOADeleteItemButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow1 = HOAOrderTable.getSelectedRow();
        if (selectedRow1 >= 0)
        {
            MedicineItem mi1 = (MedicineItem) HOAOrderTable.getValueAt(selectedRow1, 1);
            cart.remove(mi1);
            JOptionPane.showMessageDialog(null, "Medicine Item " + mi1.getName()+ " deleted from cart successfully!");
            totalAmount = totalAmount - mi1.getPrice();
            populateOrder1();
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Please select a row!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
    }//GEN-LAST:event_HOADeleteItemButtonActionPerformed

    private void HOAOrderTotalAmountTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HOAOrderTotalAmountTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HOAOrderTotalAmountTextActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddHospMedicineItemButton;
    private javax.swing.JButton HOABackButton;
    private javax.swing.JButton HOADeleteItemButton;
    private javax.swing.JButton HOAOrderButton;
    private javax.swing.JTable HOAOrderTable;
    private javax.swing.JTextField HOAOrderTotalAmountText;
    private javax.swing.JLabel HOATotalAmountLabel;
    private javax.swing.JTable HospMedicineTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

private void populateMedicine1() {
        DefaultTableModel dtm = (DefaultTableModel)HospMedicineTable.getModel();
        dtm.setRowCount(0);
        if(pharma.getMedicineCatalog().getMedicineItemList() != null)
        {
            for(MedicineItem mi : pharma.getMedicineCatalog().getMedicineItemList())
            {
                Object[] row = new Object[dtm.getColumnCount()];
                row[0] = mi.getId();
                row[1] = mi;
                row[2] = mi.getPrice();
                dtm.addRow(row);
            }
        }
        if(dtm.getRowCount() == 0)
            {
                AddHospMedicineItemButton.setEnabled(false);
                HOADeleteItemButton.setEnabled(false);
            }
    }

    private void populateOrder1() {
        DefaultTableModel dtm = (DefaultTableModel)HOAOrderTable.getModel();
        dtm.setRowCount(0);
        if(cart != null)
        {
            HOADeleteItemButton.setEnabled(true);
            HOAOrderButton.setEnabled(true);
            int count = 1;
            for(MedicineItem mi3 : cart)
            {
                Object[] row = new Object[dtm.getColumnCount()];
                row[0] = count;
                row[1] = mi3;
                row[2] =  mi3.getPrice();
                
                dtm.addRow(row);
                count++;
            }
            HOAOrderTotalAmountText.setText(Integer.toString(totalAmount));
        }
        if(HOAOrderTable.getRowCount() <= 0)
        {
            HOAOrderButton.setEnabled(false);
            HOADeleteItemButton.setEnabled(false);
        }
    }   
    
}
    


    
    
   








    
