/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.Customer.Customer;
import Business.Customer.CustomerDirectory;
import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Role.CustomerRole;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Pratik Poojari
 */
public class SystemAdminManageCustomers extends javax.swing.JPanel {

    private JPanel userProcessContainerSAMC;
    private EcoSystem ecosystem;

    public SystemAdminManageCustomers(JPanel userProcessContainer, EcoSystem ecosystem) {

        initComponents();
        this.userProcessContainerSAMC = userProcessContainer;
        this.ecosystem = ecosystem;

        txtUsername.setEnabled(false);
        txtPassword.setEnabled(false);
        txtConfirmPassword.setEnabled(false);
        txtName.setEnabled(false);
        txtPhoneNumber.setEnabled(false);
        txtAddress.setEnabled(false);
        btnSubmit.setEnabled(false);
        btnDeleteCustomer.setEnabled(false);
        btnManageCustomer.setEnabled(false);
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        btnSubmit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCustomers = new javax.swing.JTable();
        btnManageCustomer = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        btnDeleteCustomer = new javax.swing.JButton();
        lblName = new javax.swing.JLabel();
        btnCreateCustomer = new javax.swing.JButton();
        txtName = new javax.swing.JTextField();
        txtUsername = new javax.swing.JTextField();
        txtPhoneNumber = new javax.swing.JTextField();
        txtPassword = new javax.swing.JTextField();
        lblPhoneNumber = new javax.swing.JLabel();
        txtConfirmPassword = new javax.swing.JTextField();
        lblAddress = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        lblPassword = new javax.swing.JLabel();
        lblConfirmPassword = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        lblBackground = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        btnBack.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Back Button.png"))); // NOI18N
        btnBack.setText("Back");
        btnBack.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(10, 24, 110, 50);

        btnSubmit.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnSubmit.setText("Submit");
        btnSubmit.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        add(btnSubmit);
        btnSubmit.setBounds(520, 610, 120, 50);

        tblCustomers.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tblCustomers.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        tblCustomers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Serial No.", "Customer Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCustomers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCustomersMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblCustomers);

        add(jScrollPane1);
        jScrollPane1.setBounds(270, 130, 580, 140);

        btnManageCustomer.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnManageCustomer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/View Button.png"))); // NOI18N
        btnManageCustomer.setText("View");
        btnManageCustomer.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnManageCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageCustomerActionPerformed(evt);
            }
        });
        add(btnManageCustomer);
        btnManageCustomer.setBounds(10, 140, 140, 59);

        lblTitle.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Manage Customers");
        add(lblTitle);
        lblTitle.setBounds(320, 29, 445, 50);

        btnDeleteCustomer.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnDeleteCustomer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Delete Button.png"))); // NOI18N
        btnDeleteCustomer.setText("Delete");
        btnDeleteCustomer.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnDeleteCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteCustomerActionPerformed(evt);
            }
        });
        add(btnDeleteCustomer);
        btnDeleteCustomer.setBounds(10, 210, 140, 58);

        lblName.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblName.setText("Name:");
        add(lblName);
        lblName.setBounds(370, 450, 60, 30);

        btnCreateCustomer.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnCreateCustomer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Create Button.png"))); // NOI18N
        btnCreateCustomer.setText("Create");
        btnCreateCustomer.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnCreateCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateCustomerActionPerformed(evt);
            }
        });
        add(btnCreateCustomer);
        btnCreateCustomer.setBounds(10, 290, 140, 54);

        txtName.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        txtName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });
        add(txtName);
        txtName.setBounds(520, 450, 310, 31);

        txtUsername.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        txtUsername.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(txtUsername);
        txtUsername.setBounds(520, 320, 310, 32);

        txtPhoneNumber.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        txtPhoneNumber.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(txtPhoneNumber);
        txtPhoneNumber.setBounds(520, 490, 310, 30);

        txtPassword.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        txtPassword.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(txtPassword);
        txtPassword.setBounds(520, 370, 310, 30);

        lblPhoneNumber.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblPhoneNumber.setText("Phone Number:");
        add(lblPhoneNumber);
        lblPhoneNumber.setBounds(300, 490, 130, 30);

        txtConfirmPassword.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        txtConfirmPassword.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(txtConfirmPassword);
        txtConfirmPassword.setBounds(520, 410, 310, 31);

        lblAddress.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblAddress.setText("Address:");
        add(lblAddress);
        lblAddress.setBounds(350, 530, 70, 31);

        lblUsername.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblUsername.setText("Username: ");
        add(lblUsername);
        lblUsername.setBounds(340, 320, 90, 32);

        txtAddress.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        txtAddress.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddressActionPerformed(evt);
            }
        });
        add(txtAddress);
        txtAddress.setBounds(520, 530, 310, 30);

        lblPassword.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblPassword.setText("Password: ");
        add(lblPassword);
        lblPassword.setBounds(340, 370, 85, 30);

        lblConfirmPassword.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblConfirmPassword.setText("Confirm Password:");
        add(lblConfirmPassword);
        lblConfirmPassword.setBounds(270, 410, 160, 31);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        add(jSeparator1);
        jSeparator1.setBounds(168, 1, 13, 720);

        lblBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/SystemAdminWorkArea/a4.v1.png"))); // NOI18N
        add(lblBackground);
        lblBackground.setBounds(0, 0, 1140, 840);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainerSAMC.remove(this);
        Component[] componentArray = userProcessContainerSAMC.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SystemAdminWorkAreaJPanel dwjp = (SystemAdminWorkAreaJPanel) component;
        CardLayout layout = (CardLayout) userProcessContainerSAMC.getLayout();
        layout.previous(userProcessContainerSAMC);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        if (validateThisSAMC()) {
            Employee e = ecosystem.getEmployeeDirectory().createEmployee(txtName.getText(), txtAddress.getText(), txtPhoneNumber.getText());
            UserAccount ua = ecosystem.getUserAccountDirectory().createUserAccount(txtUsername.getText(), txtPassword.getText(), e, new CustomerRole());
            if (ua != null) {
                Customer c = ecosystem.getCustomerDirectory().createCustomer(txtName.getText(), txtAddress.getText(), txtPhoneNumber.getText());
                JOptionPane.showMessageDialog(null, "Customer account created successfully for " + c.getName());
                populateTable();
                btnCreateCustomer.setEnabled(true);
                txtUsername.setText("");
                txtUsername.setEnabled(false);
                txtPassword.setText("");
                txtPassword.setEnabled(false);
                txtConfirmPassword.setText("");
                txtConfirmPassword.setEnabled(false);
                txtName.setText("");
                txtName.setEnabled(false);
                txtPhoneNumber.setText("");
                txtPhoneNumber.setEnabled(false);
                txtAddress.setText("");
                txtAddress.setEnabled(false);
                btnSubmit.setEnabled(false);
            } else {
                ecosystem.getEmployeeDirectory().deleteEmployee(e);
                JOptionPane.showMessageDialog(null, "Username " + txtUsername.getText() + " already exists!", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
        } else {
            return;
        }

    }//GEN-LAST:event_btnSubmitActionPerformed

    private void tblCustomersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCustomersMouseClicked
        // TODO add your handling code here:
        int selectedRow = tblCustomers.getSelectedRow();
        if (selectedRow >= 0) {
            btnDeleteCustomer.setEnabled(true);
            btnManageCustomer.setEnabled(true);
        }
    }//GEN-LAST:event_tblCustomersMouseClicked

    private void btnManageCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageCustomerActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblCustomers.getSelectedRow();
        if (selectedRow >= 0) {
            Customer selectedCustomer = (Customer) tblCustomers.getValueAt(selectedRow, 1);
            SystemAdminUpdateCustomer fs = new SystemAdminUpdateCustomer(userProcessContainerSAMC, selectedCustomer, ecosystem);
            userProcessContainerSAMC.add("SysAdminUpdateEmployees", fs);
            CardLayout layout = (CardLayout) userProcessContainerSAMC.getLayout();
            layout.next(userProcessContainerSAMC);
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
    }//GEN-LAST:event_btnManageCustomerActionPerformed

    private void btnDeleteCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteCustomerActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblCustomers.getSelectedRow();
        if (selectedRow >= 0) {
            Customer selectedCustomer = (Customer) tblCustomers.getValueAt(selectedRow, 1);
            ecosystem.getCustomerDirectory().deleteCustomer(selectedCustomer);
            JOptionPane.showMessageDialog(null, "Customer " + selectedCustomer.getName() + " deleted successfully!");
            populateTable();
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
    }//GEN-LAST:event_btnDeleteCustomerActionPerformed

    private void btnCreateCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateCustomerActionPerformed
        // TODO add your handling code here:
        btnCreateCustomer.setEnabled(false);
        txtUsername.setEnabled(true);
        txtPassword.setEnabled(true);
        txtConfirmPassword.setEnabled(true);
        txtName.setEnabled(true);
        txtPhoneNumber.setEnabled(true);
        txtAddress.setEnabled(true);
        btnSubmit.setEnabled(true);
        btnDeleteCustomer.setEnabled(true);
        btnManageCustomer.setEnabled(true);
    }//GEN-LAST:event_btnCreateCustomerActionPerformed

    private void txtAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddressActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreateCustomer;
    private javax.swing.JButton btnDeleteCustomer;
    private javax.swing.JButton btnManageCustomer;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblBackground;
    private javax.swing.JLabel lblConfirmPassword;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPhoneNumber;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JTable tblCustomers;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtConfirmPassword;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtPhoneNumber;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel dtmSAMC = (DefaultTableModel) tblCustomers.getModel();
        dtmSAMC.setRowCount(0);
        if (ecosystem.getCustomerDirectory().getCustomerList() != null) {
            for (Customer c : ecosystem.getCustomerDirectory().getCustomerList()) {
                Object[] row = new Object[dtmSAMC.getColumnCount()];
                row[0] = c.getId();
                row[1] = c;
                dtmSAMC.addRow(row);
            }
        }
        if (dtmSAMC.getRowCount() == 0) {
            btnDeleteCustomer.setEnabled(false);
            btnManageCustomer.setEnabled(false);
        }
    }

    private boolean validateThisSAMC() {
        CustomerDirectory ua = this.ecosystem.getCustomerDirectory();
        String regex = "\\d{10}";
        if (("".equals(txtUsername.getText())) || ("".equals(txtPassword.getText())) || ("".equals(txtConfirmPassword.getText()))
                || ("".equals(txtName.getText())) || ("".equals(txtPhoneNumber.getText())) || ("".equals(txtAddress.getText()))) {
            JOptionPane.showMessageDialog(null, "Please fill all details!", "Warning", JOptionPane.WARNING_MESSAGE);
            return false;
        } else if (!(txtPassword.getText().equals(txtConfirmPassword.getText()))) {
            JOptionPane.showMessageDialog(null, "Passwords do not match!", "Warning", JOptionPane.WARNING_MESSAGE);
            return false;
        } else if (!(txtPhoneNumber.getText().matches(regex))) {
            JOptionPane.showMessageDialog(null, "Mobile no. can have only 10 digits!", "Warning", JOptionPane.WARNING_MESSAGE);
            return false;
        } else if (ua.checkIfCustomerIsUnique(txtName.getText()) == false) {
            JOptionPane.showMessageDialog(null, "Sorry credentials are taken.");
            return false;
        } else {
            return true;
        }
    }
}
