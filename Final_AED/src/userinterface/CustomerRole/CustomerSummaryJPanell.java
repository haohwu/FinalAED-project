/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.CustomerRole;

import Business.Customer.Customer;
import Business.EcoSystem;
import Business.Orders.Orders;
import Business.Pharmacy.Pharmacy;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Pratik Poojari
 */
public class CustomerSummaryJPanell extends javax.swing.JPanel {

    private JPanel userProcessContainer;

    private UserAccount user;
    private Customer customer;
    private EcoSystem system;

    public CustomerSummaryJPanell(JPanel userProcessContainer, UserAccount account, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.user = account;
        this.system = system;
        for (Customer c : system.getCustomerDirectory().getCustomerList()) {

            if (c.getName() == null ? user.getEmployee().getName() == null : c.getName().equals(user.getEmployee().getName())) {
                this.customer = c;
            }
        }
        lblEnterprise.setText(this.customer + "'s orders");
        populateRequestTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblWorkRequest = new javax.swing.JTable();
        btnAddMessage = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        lblEnterprise = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        lblBackground = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        tblWorkRequest.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        tblWorkRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "OrderID", "Order From", "Total Amount", "Message", "Delivery Man", "Delivered?", "Order Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblWorkRequest);

        add(jScrollPane1);
        jScrollPane1.setBounds(50, 280, 930, 190);

        btnAddMessage.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnAddMessage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Message Button.png"))); // NOI18N
        btnAddMessage.setText("Add Message");
        btnAddMessage.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnAddMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddMessageActionPerformed(evt);
            }
        });
        add(btnAddMessage);
        btnAddMessage.setBounds(810, 520, 170, 50);

        btnRefresh.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Refresh Button.png"))); // NOI18N
        btnRefresh.setText("Refresh");
        btnRefresh.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        add(btnRefresh);
        btnRefresh.setBounds(50, 190, 140, 50);

        lblEnterprise.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lblEnterprise.setText("<>");
        add(lblEnterprise);
        lblEnterprise.setBounds(40, 30, 550, 50);

        btnBack.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Back Button.png"))); // NOI18N
        btnBack.setText("Back");
        btnBack.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(860, 50, 120, 50);

        lblBackground.setBackground(new java.awt.Color(255, 255, 255));
        lblBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Medications02_Yellow@2x.png"))); // NOI18N
        add(lblBackground);
        lblBackground.setBounds(0, 0, 1150, 810);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddMessageActionPerformed

        int selectedRow = tblWorkRequest.getSelectedRow();
        if (selectedRow >= 0) {
            if ((tblWorkRequest.getValueAt(selectedRow, 1)) == null) {
                JOptionPane.showMessageDialog(null, "Order is not live anymore!", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            } else {
                Orders o = (Orders) tblWorkRequest.getValueAt(selectedRow, 0);
                RequestLabTestJPanel fs = new RequestLabTestJPanel(userProcessContainer, o);
                userProcessContainer.add("SysAdminManageEmployees", fs);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.next(userProcessContainer);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
    }//GEN-LAST:event_btnAddMessageActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        if (tblWorkRequest.getRowCount() > 0) {
            populateRequestTable();
            JOptionPane.showMessageDialog(null, "Table refreshed!");
        } else {
            JOptionPane.showMessageDialog(null, "Nothing to refresh!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddMessage;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBackground;
    private javax.swing.JLabel lblEnterprise;
    private javax.swing.JTable tblWorkRequest;
    // End of variables declaration//GEN-END:variables
public void populateRequestTable() {
        if (customer.getPastOrderList() != null) {
            DefaultTableModel dtm = (DefaultTableModel) tblWorkRequest.getModel();
            dtm.setRowCount(0);

            btnRefresh.setEnabled(true);
            btnAddMessage.setEnabled(true);
            int count = 1;
            for (Orders o : customer.getPastOrderList()) {
                if (system.getPharmacyDirectory().getPharmacyList() != null) {
                    Object[] row = new Object[dtm.getColumnCount()];
                    row[0] = o;
                    for (Pharmacy p : system.getPharmacyDirectory().getPharmacyList()) {
                        for (Orders or : p.getOrderDirectory().getOrderList()) {
                            if (o.equals(or)) {
                                row[1] = p;
                            }
                        }
                    }
                    row[2] = o.getTotalAmount();
                    row[3] = o.getMessage();
                    row[4] = o.getDeliveryMan();
                    if (o.isStatus()) {
                        row[5] = "Yes";
                    } else {
                        row[5] = "No";
                    }
                    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
                    row[6] = o.getOrderDate().format(formatter);
                    dtm.addRow(row);
                    count++;
                }
            }
        }
    }

}
