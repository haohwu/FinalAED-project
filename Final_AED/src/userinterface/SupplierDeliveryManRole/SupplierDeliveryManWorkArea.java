/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.SupplierDeliveryManRole;

import Business.EcoSystem;
import Business.Supplier.Supplier;
import Business.SupplierDeliveryMan.SupplierDeliveryMan;
import Business.SupplierOrders.SupplierOrders;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author chengyen lai
 */
public class SupplierDeliveryManWorkArea extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    private Supplier supplier;
    private SupplierDeliveryMan supplierDeliveryMan;

    public SupplierDeliveryManWorkArea(JPanel userProcessContainer, UserAccount account, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.business = business;

        for (Supplier s : business.getSupplierDirectory().getSupplierList()) {
            if (s.findSupplierDeliveryMan(account.getEmployee().getName()) != null) {
                this.supplierDeliveryMan = s.findSupplierDeliveryMan(account.getEmployee().getName());
                this.supplier = s;
                break;
            }
        }
        lblDeliveryAgent.setText("Orders to be delivered by " + this.supplierDeliveryMan);

        populateTable();
    }

    public void populateTable() {
        if (supplier.getSupplierOrderDirectory() != null) {
            DefaultTableModel dtm = (DefaultTableModel) tblWorkRequest.getModel();
            dtm.setRowCount(0);
            for (SupplierOrders so : supplier.getSupplierOrderDirectory().getSupplierOrderList()) {
                if (so.getSupplierDeliveryMan().equals(supplierDeliveryMan)) {
                    Object[] row = new Object[dtm.getColumnCount()];
                    row[0] = so;
                    row[1] = so.getTotalAmount();
                    row[2] = so.getMessage();
                    row[3] = so.getSupplierDeliveryMan();
                    if (so.isStatus()) {
                        row[4] = "Yes";
                    } else {
                        row[4] = "No";
                    }
                    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
                    row[5] = so.getOrderDate().format(formatter);
                    dtm.addRow(row);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblWorkRequest = new javax.swing.JTable();
        lblDeliveryAgent = new javax.swing.JLabel();
        btnProcess = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        lblBackground = new javax.swing.JLabel();

        setLayout(null);

        tblWorkRequest.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        tblWorkRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "OrderID", "Price", "Message", "Delivery Man", "Delivered?", "Order Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblWorkRequest);

        add(jScrollPane1);
        jScrollPane1.setBounds(60, 160, 910, 210);

        lblDeliveryAgent.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lblDeliveryAgent.setText("<>");
        add(lblDeliveryAgent);
        lblDeliveryAgent.setBounds(48, 38, 570, 50);

        btnProcess.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnProcess.setText("Process");
        btnProcess.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessActionPerformed(evt);
            }
        });
        add(btnProcess);
        btnProcess.setBounds(360, 390, 330, 50);

        btnRefresh.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Refresh Button.png"))); // NOI18N
        btnRefresh.setText("Refresh");
        btnRefresh.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        add(btnRefresh);
        btnRefresh.setBounds(810, 80, 160, 50);

        lblBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Pharmacy Delivery.jpeg"))); // NOI18N
        add(lblBackground);
        lblBackground.setBounds(-180, 0, 1210, 880);
    }// </editor-fold>//GEN-END:initComponents

    private void btnProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessActionPerformed
        int selectedRow = tblWorkRequest.getSelectedRow();
        if (selectedRow >= 0) {
            if ((tblWorkRequest.getValueAt(selectedRow, 1)) == null) {
                JOptionPane.showMessageDialog(null, "Order is not live anymore!", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            } else {
                SupplierOrders so = (SupplierOrders) tblWorkRequest.getValueAt(selectedRow, 0);
                SupplierProcessDeliveryWorkArea fs = new SupplierProcessDeliveryWorkArea(userProcessContainer, so);
                userProcessContainer.add("SysAdminManageEmployees", fs);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.next(userProcessContainer);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

    }//GEN-LAST:event_btnProcessActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        if (tblWorkRequest.getRowCount() > 0) {
            populateTable();
            JOptionPane.showMessageDialog(null, "Table refreshed!");
        } else {
            JOptionPane.showMessageDialog(null, "Nothing to refresh!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnRefreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnProcess;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBackground;
    private javax.swing.JLabel lblDeliveryAgent;
    private javax.swing.JTable tblWorkRequest;
    // End of variables declaration//GEN-END:variables
}
